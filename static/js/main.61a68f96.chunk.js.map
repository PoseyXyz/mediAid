{"version":3,"sources":["components/Navbar.js","img/2.png","pages/Home.js","Context.js","components/Sidebar.js","components/SymptomDetails.js","components/Diagnosis.js","pages/DiagnosesList.js","pages/FullDiagnosisDetails.js","components/Symptom.js","components/SymptomsList.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","children","className","Home","to","src","logo","alt","MediContext","React","createContext","MediProvider","useState","symptoms","setSymptoms","tags","setTags","diagnoses","setDiagnoses","lessLikelyDiagnoses","setLessLikelyDiagnoses","useEffect","parsedDiagnoses","JSON","parse","localStorage","getItem","setItem","stringify","getSymptomsInfo","a","fetch","data","json","res","console","log","addTag","value","retrieveDiagnoses","string","map","arr","index","processLessLikelyDiagnoses","diag","slicedArray","filter","i","Math","floor","length","item","id","mappedId","filteredArray","el","includes","Provider","showDetails","name","find","symptom","handleTags","itemIndex","tempValues","removeTag","showDiagnosisDetails","diagnosis","showLessLikelyDiagnosisDetails","Consumer","Sidebar","page","width","progressWidth","setProgressWidth","style","color","FullDiagnosisDetails","slug","useParams","useContext","questions","question","tag","type","onChange","checked","onClick","Diagnosis","DiagnosesList","props","loader","setLoader","toggleDropdown","setToggleDropdown","setTimeout","display","_id","interval","isOpen","setIsOpen","overview","causes","prevention","firstAid","aid","triage","list","height","message","listItem","setInterval","gen","next","done","clearInterval","utterance","SpeechSynthesisUtterance","text","speechSynthesis","speak","Symbol","iterator","window","cancel","headline","visibility","Symptom","SymptomsList","searchString","setSearchString","_symptoms","search","trim","toLowerCase","match","placeholder","e","target","App","exact","path","component","SymptomDetails","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.61a68f96.chunk.js","sourcesContent":["import React from 'react';\r\nimport {FaPlusCircle} from 'react-icons/fa';\r\n\r\nfunction Navbar({children}) {\r\n    return (\r\n        <div className='navbar'>\r\n            <h2> mediAid  <i><FaPlusCircle/></i></h2>\r\n        {children}\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navbar;","export default __webpack_public_path__ + \"static/media/2.c2a53616.png\";","import React from 'react';\r\nimport Navbar from '../components/Navbar';\r\nimport { Link } from 'react-router-dom';\r\nimport logo from '../img/2.png'\r\n\r\nfunction Home() {\r\n\r\n    return (\r\n        <div className=\"App\">\r\n          \r\n          <Navbar/>\r\n          <div className='body'>\r\n            <div className='home'>\r\n       \r\n         <div className='txt-holder'>\r\n              <h1>Hello!</h1>\r\n        <p>You're about to perform a short, safe and anonymous health checkup. Your answers will be carefully analysed and you'll learn about the possible causes of your symptoms. You will also gain a little information about your symptoms and what you could do to feel better</p>\r\n          <h4>Before you continue, it is important to note the following:</h4>\r\n          <ul>\r\n            <li>Do  not use mediAid in the case of a health emergency. Instead, contact your local emergency service.</li>\r\n            <li>Checkup is meant for informational purposes <b>only</b> and is not a qualified medical diagnosis.</li>\r\n            <li>The information you provide is anonymous and not shared with anyone</li>.\r\n          </ul>\r\n           <Link to='/symptoms'>\r\n           <button>Start checkup</button>\r\n           </Link>\r\n              </div>\r\n<div className='img-holder'>\r\n<img src={logo} alt='homeImg'/>\r\n</div>\r\n</div>    \r\n      </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Home","import React, { useState, useEffect } from 'react'\r\n\r\n\r\nconst MediContext = React.createContext()\r\n\r\nconst MediProvider = ({children})=>{\r\n    const [symptoms, setSymptoms] = useState([])\r\n    const [tags, setTags] = useState([])\r\n    const [diagnoses, setDiagnoses] = useState([])\r\n    const [lessLikelyDiagnoses, setLessLikelyDiagnoses] = useState([])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n    const parsedDiagnoses =JSON.parse(localStorage.getItem(\"diagnoses\"))\r\n    setDiagnoses(parsedDiagnoses)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"diagnoses\", JSON.stringify(diagnoses))\r\n  }, [diagnoses])\r\n\r\n  // useEffect(() => {\r\n  //   const parsedSymptoms =JSON.parse(localStorage.getItem(\"symptoms\"))\r\n  //   setSymptoms(parsedSymptoms)\r\n  // }, [])\r\n\r\n  // useEffect(() => {\r\n  //   localStorage.setItem(\"symptoms\", JSON.stringify(symptoms))\r\n  // }, [symptoms])\r\n    //faced the challenge of making an api\r\n    //how to gather data and return it\r\n    //parse uri \r\n    //losing dtat on refresh\r\n   \r\n    useEffect(()=>{\r\n        getSymptomsInfo()\r\n\r\n    }, [])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const getSymptomsInfo= async ()=>{\r\n        const data = await fetch(`https://medi-aid-server.herokuapp.com/symptoms`)\r\n        const res =await data.json()\r\n        console.log(res);\r\n        setSymptoms(res)\r\n    \r\n    }\r\n\r\n    const showDetails = (name)=>{\r\n        const symptom = symptoms.find(symptom=>symptom.name===name)\r\n        return symptom\r\n    }\r\n    const showDiagnosisDetails = (name)=>{\r\n      const diagnosis = diagnoses.find(diagnosis=>diagnosis.name===name)\r\n      return diagnosis\r\n  }\r\n  const showLessLikelyDiagnosisDetails = (name)=>{\r\n    const diagnosis = lessLikelyDiagnoses.find(diagnosis=>diagnosis.name===name)\r\n    return diagnosis\r\n}\r\n\r\n\r\n\r\n  const addTag=async (value)=>{    \r\n  setTags([...tags, value])  \r\n  }\r\n  const removeTag=(itemIndex)=>{\r\n   let tempValues = tags.filter((value)=>value !== itemIndex)\r\n   setTags(tempValues)\r\n  }\r\n\r\n    const handleTags= (value)=>{          \r\n        if (tags.includes(value)) {\r\n          removeTag(value)\r\n        }else{\r\n            addTag(value)\r\n        }\r\n     \r\n      };\r\n\r\n  \r\n    \r\n      const retrieveDiagnoses=async ()=>{\r\n        let string = ''\r\n    \r\n        tags.map((arr,index)=>{return string+=`${index ? '&':''}array=${arr}`})\r\n      \r\n       const data = await fetch(`https://medi-aid-server.herokuapp.com/tags?${string}`)\r\n    const res =await data.json()\r\nconsole.log(string);\r\nconsole.log(res);\r\n   setDiagnoses(res)\r\n\r\nprocessLessLikelyDiagnoses(res)\r\n    \r\n      } \r\n    \r\n      const processLessLikelyDiagnoses = async (diag)=>{\r\n        const slicedArray =tags.filter((i, index)=>index<Math.floor(tags.length*0.7))\r\n        \r\n        let string = ''\r\n    \r\n        slicedArray.map((arr,index)=>{return string+=`${index ? '&':''}array=${arr}`})\r\n      \r\n       const data = await fetch(`https://medi-aid-server.herokuapp.com/tags?${string}`)\r\n    const res =await data.json()\r\nconsole.log(string);\r\nconsole.log(res);\r\n\r\n\r\n\r\nlet mappedId =await diag.map(item=>{return item.id})\r\nlet filteredArray =  res.filter(el=>!mappedId.includes(el.id))\r\n\r\n   setLessLikelyDiagnoses(filteredArray)\r\n\r\n      }\r\n\r\n\r\n\r\n    return (\r\n        <MediContext.Provider value={{\r\n            symptoms,\r\n            setSymptoms,\r\n\r\n            showDetails,\r\n            handleTags,\r\n\r\n           \r\n\r\n            tags,\r\n            setTags,\r\n            \r\n            diagnoses,\r\n            setDiagnoses,\r\n\r\n            retrieveDiagnoses,\r\n\r\n            showDiagnosisDetails,\r\n\r\n          processLessLikelyDiagnoses,\r\n          lessLikelyDiagnoses,\r\n\r\n          showLessLikelyDiagnosisDetails       \r\n        }}>\r\n            {children}\r\n        </MediContext.Provider>\r\n    )\r\n}\r\n\r\nconst MediConsumer = MediContext.Consumer\r\n\r\nexport {MediContext, MediProvider, MediConsumer}\r\n\r\n\r\n\r\n/*\r\nimport React from \"react\";\r\nimport { render } from \"react-dom\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    shouldCreate: \"\",\r\n    values:[],\r\n    checked:false\r\n  };\r\n\r\n  handleSomething = (value, itemIndex) => {\r\n    let shouldCreate = this.state.shouldCreate;\r\n\r\n    if (shouldCreate === \"Yes\") {\r\n      shouldCreate = \"No\";\r\n      this.removeValue(itemIndex)\r\n    } else if (shouldCreate === \"No\") {\r\n      shouldCreate = \"Yes\";\r\n     this.addValue(value)\r\n    } else {\r\n      shouldCreate = \"Yes\";\r\n      this.addValue(value)\r\n    }\r\n\r\n    this.setState({\r\n      shouldCreate\r\n    });\r\n  };\r\n\r\n  addValue=(value)=>{\r\n    const values = [...this.state.values]\r\n    this.setState({\r\n      values:[...values, value]\r\n    })\r\n  }\r\n  removeValue=(itemIndex)=>{\r\n    let values = [...this.state.values]\r\n    values = values.filter((value, index)=>value !== itemIndex)\r\n    this.setState({\r\n      values\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <input type=\"checkbox\" checked={this.state.shouldCreate === \"Yes\"} onClick={()=>this.handleSomething('covid', 'covid')} />\r\n\r\n        <div>\r\n          Should create? : {this.state.shouldCreate}\r\n        </div>\r\n        <p>{this.state.values}</p>\r\n\r\n\r\n        <form onSubmit={this.formSubmit}>\r\n        <div className=\"radio\">\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              value=\"covid\"\r\n              checked={this.state.values.includes('covid')}\r\n              onChange={(e)=>{this.addValue(e.target.value); this.setState({checked:false})}}\r\n            />\r\n            Covid\r\n          </label>\r\n        </div>\r\n        <div className=\"radio\">\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              value=\"covid\"\r\n              checked={this.state.checked}\r\n              onChange={(e)=>{this.removeValue(e.target.value); this.setState({checked:true})}}\r\n            />\r\n            No\r\n          </label>\r\n        </div>\r\n       \r\n      \r\n        \r\n      </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nrender(<App />, document.getElementById(\"root\"));\r\n\r\n */","import React, { useState, useEffect } from 'react';\r\nimport { FaAngleRight } from 'react-icons/fa';\r\n\r\nfunction Sidebar({page}) {\r\n    const [progressWidth, setProgressWidth] = useState({width:0})\r\nuseEffect(()=>{\r\n    \r\n       \r\n    if (page==='symptoms') {\r\n        setProgressWidth({width:'2rem'})\r\n    return (<p>Initial symptom selection</p>)\r\n    } else if (page==='questions'){\r\n        setProgressWidth({width:'4rem'})\r\n        return <p>Diagnostic questions</p>\r\n    }else if(page==='results'){\r\n        setProgressWidth({width:'6rem'})\r\n        return <p>Diagnosis results</p>\r\n    }\r\n    \r\n}, [])\r\nconst displayAltSidebar=()=>{\r\n    if (page==='symptoms'){\r\n    return <p>Initial symptom selection</p>\r\n    } else if (page==='questions'){\r\n        return <p>Diagnostic questions</p>\r\n    }else if(page==='results'){\r\n        return <p>Diagnosis results</p>\r\n    }\r\n}\r\n  \r\n   \r\n    return (\r\n       <>\r\n     <div className='sidebar'>\r\n            <p style={{color: page==='symptoms' ? '#fff':'#000'}}>Initial symptom selection</p>\r\n            <i ><FaAngleRight/></i>\r\n            <p style={{color: page==='questions' ? '#fff':'#000'}}>Diagnostic questions</p>\r\n            <i><FaAngleRight/></i>\r\n            <p style={{color: page==='results' ? '#fff':'#000'}}>Diagnosis results</p>\r\n\r\n        \r\n        </div>\r\n        <div className='altSidebar'>\r\n          {\r\n              displayAltSidebar()\r\n          }\r\n            <div className='progress-bar'>\r\n                <span style={progressWidth}></span>\r\n            </div>\r\n        </div>\r\n       </>\r\n    );\r\n}\r\n\r\nexport default Sidebar;","import React, {useContext, useEffect, useState} from 'react'\r\nimport { MediContext } from '../Context'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport Navbar from './Navbar';\r\nimport {FaAngleLeft} from 'react-icons/fa'\r\nimport Sidebar from './Sidebar';\r\nexport default function FullDiagnosisDetails(){\r\n   \r\n    let { slug } = useParams();\r\n    const {showDetails, tags, handleTags, retrieveDiagnoses, setDiagnoses} = useContext(MediContext)\r\n    const [page] = useState('questions')\r\n    \r\n    useEffect(()=>{\r\n        return ()=>{   \r\n            setDiagnoses([])\r\n        }\r\n    }, [])    \r\n\r\n    const symptom = showDetails(slug)\r\n       \r\n    if(!symptom){\r\n        return <div>Requesting resources</div>\r\n    }\r\n    const {questions, name} = symptom\r\n  \r\n             \r\n    return <>\r\n     \r\n    <Navbar/>\r\n     <div className='body'>\r\n     <Sidebar page={page}/>\r\n        <div className=\"questions-box\">\r\n<h1 className='headline'> {name}</h1>\r\n<p className='sub-headline'>Find possible causes of {name} based on specific factors. Check at least one or more factors on this page that apply to your symptom(s).</p>\r\n  \r\n       <div>\r\n           {questions.map((item, index)=>{\r\n           const {question, tag} = item\r\n              \r\n           return <div key={index} className='question'>\r\n               <p className='question-txt'>{question}</p>    \r\n               <label className='checkbox'>\r\n                   \r\n               <input type=\"checkbox\" onChange={()=>{handleTags(tag)}}  checked={tags.includes(tag)} />\r\n               <span></span>\r\n               </label>\r\n          \r\n           </div>\r\n           \r\n           }\r\n           )}\r\n       </div>\r\n       <div className='btn-holder'>\r\n       <Link to='/d'><button className='back-btn'><i><FaAngleLeft/></i>Back</button></Link>\r\n       <Link to='/d'><button className='submit-btn' onClick={()=>{retrieveDiagnoses()}}>Submit</button></Link>\r\n       \r\n\r\n       </div>\r\n \r\n\r\n\r\n        \r\n        </div>\r\n    </div>\r\n    </>\r\n\r\n}\r\n\r\n// export default class SymptomDetails extends Component{\r\n//   constructor(props){\r\n//       super(props)\r\n//       this.state={\r\n//           name:this.props.match.params.name,\r\n          \r\n//       }\r\n//   }\r\n//     render(){\r\n//         return(\r\n//             <MediConsumer>\r\n//                 {value=>{\r\n//                     const {showDetails, addValue, removeValue, values, setValues, handleSomething, retrieveDiagnoses} = value\r\n//                     const symptom = showDetails(this.state.name)\r\n               \r\n                    \r\n\r\n                   \r\n\r\n\r\n//                     if(!symptom){\r\n//                         return <div>The resource you requested for couldn't be retreived</div>\r\n//                     }\r\n//                     const {name, questions} = symptom\r\n//                     let string = ''     \r\n\r\n//                     return <div>\r\n//                         <div>\r\n                       \r\n//                        <div> {string}</div>\r\n//                        {name}\r\n\r\n//                        <div>\r\n//                            {questions.map((item, index)=>{\r\n//                            const {question, tag} = item\r\n                       \r\n                       \r\n//                            return <div key={index}>\r\n//                           {tag}\r\n                         \r\n//                              <label>\r\n//                            <input type=\"checkbox\" checked={values.includes(tag)} onChange={()=>handleSomething(tag)} />\r\n//                            {question}\r\n//                              </label>\r\n//                            </div>\r\n//                            }\r\n//                            )}\r\n//                        </div>\r\n//                    </div>\r\n//                    <Link to='/d'><button onClick={retrieveDiagnoses}>GO NOW</button></Link>\r\n//                     </div>\r\n//                 }}\r\n//             </MediConsumer>\r\n//         )\r\n//     }\r\n// }","import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport { FaAngleRight } from 'react-icons/fa';\r\nfunction Diagnosis({diagnosis}) {\r\n    const {name} = diagnosis\r\n    return (\r\n        <Link to={`/diagnosis/${name}`}>\r\n          <button className='diagnosis'>\r\n   \r\n   {name}\r\n   <i><FaAngleRight/></i>\r\n\r\n</button>\r\n        </Link>\r\n    );\r\n}\r\n\r\nexport default Diagnosis;","import React, { useState, useEffect, useContext } from 'react';\r\nimport { MediContext } from '../Context';\r\nimport Diagnosis from '../components/Diagnosis';\r\nimport Navbar from '../components/Navbar';\r\nimport Sidebar from '../components/Sidebar';\r\nimport { Link } from 'react-router-dom';\r\nimport { FaPlus } from 'react-icons/fa';\r\n\r\nfunction DiagnosesList(props) {\r\n    const {diagnoses, setTags, lessLikelyDiagnoses} = useContext(MediContext)\r\n    const [page] = useState('results')\r\n    const [loader, setLoader] = useState(false)\r\n    const [toggleDropdown, setToggleDropdown] = useState(false)\r\n    useEffect(()=>{\r\n    \r\n        return ()=>{\r\n            setTags([])\r\n        }\r\n    }, [loader])\r\n    setTimeout(()=>{\r\n        setLoader(true)\r\n    }, 10000)\r\n  \r\n    return (<>\r\n    <Navbar/>\r\n    {\r\n        diagnoses != null && diagnoses.length === 0 ? <div>{loader ? <div className='body'>\r\n             <Sidebar page={page}/>\r\n        <div className='diagnoses-list-box'>\r\n           <h1>Please try again. Your selected symptoms either didn't match our current diagnoses list or you did not choose enough symptoms to arrive at a diagnosis. </h1>\r\n          <Link to=\"/\">\r\n          <button className='restart-btn'>\r\n               Restart diagnostic process\r\n               </button>\r\n          </Link>\r\n          \r\n            </div>\r\n        </div>: \r\n        <div className='body'>\r\n            <div className='diagnoses-list-box'>\r\n           <h1>Processing diagnosis...</h1>\r\n        \r\n            </div>\r\n        </div>\r\n            }</div>\r\n        :\r\n            <div className='body' style={{display:diagnoses===[]?'none':'flex'}}>\r\n        <Sidebar page={page}/>\r\n        <div className='diagnoses-list-box'>\r\n            <h1 className='headline'>Diagnosis Results</h1>\r\n            <p className='sub-headline'>Please note that the list below may not be complete and is provided solely for informtational purposes and is not a qualified medical opinion</p>\r\n             {diagnoses ? diagnoses.map(diagnosis=><Diagnosis key={diagnosis._id} diagnosis={diagnosis}/>): null}\r\n                \r\n             {\r\n        lessLikelyDiagnoses.length===0 ? <></> : <div>\r\n <button onClick={()=>{setToggleDropdown(!toggleDropdown)}} className=\"less-likely-diagnosis\"><i><FaPlus/></i>{toggleDropdown ? 'Hide less likely diagnoses' : 'Show less likely diagnosis'}  </button>\r\n <div style={{display: toggleDropdown?'block':'none'}}>{lessLikelyDiagnoses.map(diagnosis=><Diagnosis key={diagnosis._id} diagnosis={diagnosis}/>)}</div>\r\n        </div>\r\n    }\r\n     <Link to=\"/\">\r\n          <button className='restart-btn'>\r\n               Restart diagnostic process\r\n               </button>\r\n          </Link>\r\n          \r\n\r\n            </div>\r\n        </div>\r\n    }\r\n  \r\n        \r\n        </>\r\n    );\r\n}\r\n\r\nexport default DiagnosesList;","import React, {useContext, useState } from 'react';\r\nimport {MediContext } from '../Context';\r\nimport {useParams, Link} from 'react-router-dom'\r\nimport Navbar from '../components/Navbar';\r\nimport {FaMicrophone, FaFirstAid, FaHospital} from 'react-icons/fa'\r\nexport default function FullDiagnosisDetails(){\r\n    let { slug } = useParams();\r\n    const {showDiagnosisDetails, showLessLikelyDiagnosisDetails} = useContext(MediContext)\r\n    const diagnosis = showDiagnosisDetails(slug) || showLessLikelyDiagnosisDetails(slug)\r\n    const [isOpen, setIsOpen] = useState(false)\r\n\r\nlet interval;\r\n      const printARR =(myArray)=>{\r\n    //     let string = ''\r\n    //   let func =setInterval(function(){\r\n    //     for (const i in array) {\r\n    //         string += array[i]\r\n    //     }\r\n    //   }, 6000)\r\n    //     var utterance  = new SpeechSynthesisUtterance();\r\n    //     utterance.text = string\r\n    //     speechSynthesis.speak(utterance);\r\n\r\n    //     let myArray = [0, 1, 2, 3, 4]\r\n\r\ninterval = setInterval(gen => {\r\n  const { value, done } = gen.next()\r\n  \r\n  if (done) {\r\n    clearInterval(interval)\r\n  } else {\r\n    console.log(value)\r\n    var utterance  = new SpeechSynthesisUtterance();\r\n    utterance.text = value\r\n    speechSynthesis.speak(utterance);\r\n  }\r\n}, 1000, myArray[Symbol.iterator]())\r\n      }\r\n\r\n      const cancelSpeech =()=>{\r\n          clearInterval(interval)\r\n        var synth = window.speechSynthesis;\r\n\r\n        \r\n        synth.cancel()\r\n      }\r\n  \r\n\r\n    if(!diagnosis){\r\n        return <div>The resource you requested for couldn't be retreived</div>\r\n       }\r\n       const {name, overview, causes, symptoms, prevention, firstAid, firstAid:[aid], triage} = diagnosis\r\n       const {list} = aid\r\n       return <>\r\n       <Navbar>\r\n       <Link to=\"/\">\r\n          <button className='restart-btn'>\r\n               Restart diagnostic process\r\n               </button>\r\n          </Link>\r\n          \r\n       </Navbar>\r\n\r\n       <div className='body'>\r\n         \r\n           <div className=\"overlay\" style={{height:isOpen?'100%': '0'}}>\r\n  <button to='' className=\"closebtn\" onClick={()=>setIsOpen(!isOpen)}>&times;</button>\r\n  <div className=\"overlay-content\">\r\n\r\n  <div className='triage-div'>\r\n <div className='img-holder'>\r\n<FaHospital/>\r\n </div>\r\n <div className='content'>\r\n <h2>Triage Advice</h2>\r\n        {triage.map(item=>(\r\n            <div>\r\n            <h3>{item.message}</h3>\r\n       <ul>\r\n           {item.list.map(listItem=>(\r\n               <li>{listItem}</li>\r\n           ))}\r\n       </ul>\r\n       </div>\r\n        ))}\r\n </div>\r\n    </div>\r\n  <div className='firstAid-div'>\r\n   <div className='img-holder'>\r\n<FaFirstAid/>\r\n   </div>\r\n   <div className='content'>\r\n   <div className='headline'>\r\n  <h2>First-Aid/Treatment options</h2>\r\n  <div id=\"btn-holder\">\r\n  <button onClick={()=>printARR(list)}><i><FaMicrophone/></i> Read aloud </button>\r\n    <button onClick={cancelSpeech} id=\"cancel\">End read aloud</button>\r\n  </div>\r\n      </div>\r\n        {firstAid.map(item=>(\r\n            <div>\r\n            <h3>{item.headline}</h3>\r\n       <ul>\r\n\r\n           {item.list.map(listItem=>(\r\n              <li>{listItem}</li>\r\n           ))}\r\n       </ul>\r\n       </div>\r\n        ))}\r\n   </div>\r\n    </div>\r\n\r\n    \r\n\r\n  </div>\r\n</div>\r\n       <div className='diagnosisDetailsPage'>\r\n    \r\n          <div className='header'>\r\n              \r\n              <h1 className='diagnosis-name'><b>{name}</b></h1>\r\n              \r\n        \r\n            {/* <div className='nav-buttons'>\r\n            <Link to=\"/\">\r\n          <button className='restart-btn'>\r\n               Restart diagnostic process\r\n               </button>\r\n          </Link>\r\n     \r\n                \r\n\r\n            </div> */}\r\n          </div>\r\n\r\n          <div className='overview'>\r\n              <h1>Overview</h1>\r\n          <p>{overview}</p>\r\n          </div>\r\n      \r\n\r\n    <div className='causes'><h1>Causes</h1>\r\n        {causes.map(item=>(\r\n            <div>\r\n            <h3>{item.headline}</h3>\r\n       \r\n           <ul>\r\n           {item.list.map(listItem=>(\r\n               <li>{listItem}</li>\r\n           ))}\r\n           </ul>\r\n          \r\n       \r\n       </div>\r\n        ))}\r\n    </div>\r\n\r\n    <div className='symptoms'><h1>Symptoms</h1>\r\n        {symptoms.map(item=>(\r\n            <div>\r\n            <h2>{item.headline}</h2>\r\n       <ul>\r\n           {item.list.map(listItem=>(\r\n               <li>{listItem}</li>\r\n           ))}\r\n       </ul>\r\n       </div>\r\n        ))}\r\n    </div>\r\n\r\n\r\n    <div className='prevention'><h1>Prevention</h1>\r\n        {prevention.map(item=>(\r\n            <div>\r\n            <h2>{item.headline}</h2>\r\n       <ul>\r\n           {item.list.map(listItem=>(\r\n               <li>{listItem}</li>\r\n           ))}\r\n       </ul>\r\n       </div>\r\n        ))}\r\n    </div>\r\n\r\n\r\n\r\n    \r\n       </div>\r\n\r\n       <button style={{visibility: isOpen?'hidden':'visible'}} className=\"triage-btn\" onClick={()=>setIsOpen(!isOpen)}><i><FaFirstAid/></i>First-Aid</button>\r\n       </div>\r\n       </>\r\n       \r\n\r\n}\r\n// class FullDiagnosisDetails extends Component {\r\n//     constructor(props){\r\n//         super(props)\r\n//         this.state={\r\n//             name:this.props.match.params.name\r\n//         }\r\n//     }\r\n//     render() {\r\n//         return (\r\n//            <MediConsumer>\r\n//                {value=>{\r\n//                    const {showDiagnosisDetails} = value\r\n//                    const diagnosis = showDiagnosisDetails(this.state.name)\r\n\r\n//                    if(!diagnosis){\r\n//                     return <div>The resource you requested for couldn't be retreived</div>\r\n//                    }\r\n//                    const {name} = diagnosis\r\n//                    return <div>\r\n//                        <p><b>{name}</b></p>\r\n//                    </div>\r\n//                }}\r\n//            </MediConsumer>\r\n//         );\r\n//     }\r\n// }\r\n\r\n\r\n// export default FullDiagnosisDetails;\r\n// import {\r\n//     BrowserRouter as Router,\r\n//     Switch,\r\n//     Route,\r\n//     useParams\r\n//   } from \"react-router-dom\";\r\n  \r\n//   function BlogPost() {\r\n//     let { slug } = useParams();\r\n//     return <div>Now showing post {slug}</div>;\r\n//   }\r\n  ","import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport {FaAngleRight} from 'react-icons/fa'\r\nfunction Symptom({symptom, setTags, tags}) {\r\n    const {name, tag} = symptom\r\n\r\n    return (\r\n    <Link to={`/${name}`}>\r\n   <button className='symptom' onClick={()=>{setTags([...tags, tag])}}>\r\n   \r\n              {name}\r\n              <i><FaAngleRight/></i>\r\n        \r\n   </button>\r\n    </Link>\r\n        \r\n    );\r\n}\r\n\r\nexport default Symptom;","import React, { useState, useContext, useEffect } from 'react';\r\nimport { MediContext } from '../Context';\r\nimport Symptom from './Symptom';\r\nimport Navbar from './Navbar';\r\nimport Sidebar from './Sidebar';\r\n\r\n\r\nfunction SymptomsList() {\r\n    const {symptoms, tags, setTags} = useContext(MediContext)\r\n    const [searchString, setSearchString] = useState('')\r\n    const [page] = useState('symptoms')\r\n\r\n    let _symptoms = symptoms;\r\n    let search = searchString.trim().toLowerCase()\r\n    if (search.length > 0){\r\n        _symptoms = _symptoms.filter(symptom=>{\r\n            return symptom.name.toLowerCase().match(search)\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        setTags([])\r\n      }, [])\r\n     const handleChange=(e)=>{\r\n        setSearchString(e.target.value)\r\n      }\r\n    return (\r\n        <>\r\n        <Navbar/>\r\n            \r\n        <div className='body'>\r\n        \r\n         <Sidebar page={page}/>\r\n        \r\n          <div className='symptoms-box'>\r\n          <div className='search-box'>\r\n                <h3>What is the main symptom you are experiencing?</h3>\r\n                <input placeholder='Search list of symptoms'\r\n                value={searchString}\r\n                onChange={handleChange}/>\r\n            </div>\r\n        <div className='symptoms-list'>\r\n          {_symptoms.map(symptom=>(\r\n              <Symptom key={symptom._id} symptom={symptom} tags={tags} setTags={setTags}/>\r\n            ))}\r\n          </div>\r\n          </div>\r\n        \r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SymptomsList;","import React from 'react'\nimport './App.scss';\nimport {Switch, Route} from 'react-router-dom'\nimport Home from './pages/Home';\nimport SymptomDetails from './components/SymptomDetails';\nimport DiagnosesList from './pages/DiagnosesList';\nimport FullDiagnosisDetails from './pages/FullDiagnosisDetails';\nimport SymptomsList from './components/SymptomsList';\n\n\nfunction App() {\n    return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path='/' component={Home}/>\n        <Route exact path='/symptoms' component={SymptomsList}/>\n        <Route exact path='/d' component={DiagnosesList}/>\n        <Route exact path='/:slug' component={SymptomDetails}/>\n        <Route exact path='/diagnosis/:slug' component={FullDiagnosisDetails}/>\n       \n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { MediProvider } from './Context';\nimport {HashRouter as Router} from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <MediProvider>\n      <Router basename={\"https://poseyxyz.github.io/mediAid/\"}>\n        <App/>\n      </Router>\n    </MediProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}