{"version":3,"sources":["components/Navbar.js","img/2.png","pages/Home.js","Context.js","components/Sidebar.js","components/SymptomDetails.js","components/Diagnosis.js","pages/DiagnosesList.js","pages/FullDiagnosisDetails.js","components/Symptom.js","components/SymptomsList.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","Home","to","src","logo","MediContext","React","createContext","MediProvider","children","useState","symptoms","setSymptoms","values","setValues","diagnoses","setDiagnoses","useEffect","parsedDiagnoses","JSON","parse","localStorage","getItem","setItem","stringify","getSymptomsInfo","a","fetch","data","json","res","console","log","addValue","value","removeValue","itemIndex","tempValues","filter","retrieveDiagnoses","string","map","arr","index","Provider","showDetails","name","find","symptom","handleSomething","includes","showDiagnosisDetails","diagnosis","Consumer","Sidebar","page","width","progressWidth","setProgressWidth","style","color","FullDiagnosisDetails","slug","useParams","useContext","questions","item","question","tag","type","onChange","checked","onClick","Diagnosis","aria-hidden","DiagnosesList","setDisplayPage","display","_id","interval","isOpen","setIsOpen","overview","causes","prevention","firstAid","aid","triage","list","headline","height","message","listItem","id","setInterval","gen","next","done","clearInterval","utterance","SpeechSynthesisUtterance","text","speechSynthesis","speak","Symbol","iterator","window","cancel","visibility","Symptom","SymptomsList","searchString","setSearchString","_symptoms","search","trim","toLowerCase","length","match","placeholder","e","target","App","exact","path","component","SymptomDetails","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.212da14e.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FaPlusSquare, FaPlus, FaPlusCircle, FaRegPlusSquare } from 'react-icons/fa';\r\n\r\nfunction Navbar(props) {\r\n    return (\r\n        <div className='navbar'>\r\n            <h2> mediAid  <i><FaPlusCircle/></i></h2>\r\n        \r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navbar;","export default __webpack_public_path__ + \"static/media/2.c2a53616.png\";","import React from 'react';\r\nimport Navbar from '../components/Navbar';\r\nimport { Link } from 'react-router-dom';\r\nimport logo from '../img/2.png'\r\n\r\nfunction Home() {\r\n  async function changeMe(){\r\n    let string = ''\r\n    const array = [\"cold\", \"lethargy\", \"high fever\"]\r\n    array.map((arr,index)=>{return string+=`${index ? '&':''}array=${arr}`})\r\n  \r\n   const data = await fetch(`http://localhost:3000/tags?${string}`)\r\nconst res =await data.json()\r\n\r\nconsole.log(res);\r\n  }\r\n    return (\r\n        <div className=\"App\">\r\n          <Navbar/>\r\n          <div className='body'>\r\n            <div className='home'>\r\n       \r\n         <div className='txt-holder'>\r\n              <h1>Hello!</h1>\r\n        <p>You're about to perform a short, safe and anonymous health checkup. Your answers will be carefully analysed and you'll learn about the possible causes of your symptoms. You will also gain a little information about your symptoms and what you could do to feel better</p>\r\n          <h4>Before you continue, it is important to note the following:</h4>\r\n          <ul>\r\n            <li>Do  not use mediAid in the case of a health emergency. Instead, contact your local emergency service.</li>\r\n            <li>Checkup is meant for informational purposes <b>only</b> and is not a qualified medical diagnosis.</li>\r\n            <li>The information you provide is anonymous and not shared with anyone</li>.\r\n          </ul>\r\n           <Link to='/symptoms'>\r\n           <button>Start checkup</button>\r\n           </Link>\r\n              </div>\r\n<div className='img-holder'>\r\n<img src={logo}/>\r\n</div>\r\n</div>    \r\n      </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Home","import React, { useState, useEffect } from 'react'\r\n\r\n\r\nconst MediContext = React.createContext()\r\n\r\nconst MediProvider = ({children})=>{\r\n    const [symptoms, setSymptoms] = useState([])\r\n    const [values, setValues] = useState([])\r\n    const [diagnoses, setDiagnoses] = useState([])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n    const parsedDiagnoses =JSON.parse(localStorage.getItem(\"diagnoses\"))\r\n    setDiagnoses(parsedDiagnoses)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"diagnoses\", JSON.stringify(diagnoses))\r\n  }, [diagnoses])\r\n\r\n  // useEffect(() => {\r\n  //   const parsedSymptoms =JSON.parse(localStorage.getItem(\"symptoms\"))\r\n  //   setSymptoms(parsedSymptoms)\r\n  // }, [])\r\n\r\n  // useEffect(() => {\r\n  //   localStorage.setItem(\"symptoms\", JSON.stringify(symptoms))\r\n  // }, [symptoms])\r\n    //faced the challenge of making an api\r\n    //how to gather data and return it\r\n    //parse uri \r\n    //losing dtat on refresh\r\n   \r\n    useEffect(()=>{\r\n        getSymptomsInfo()\r\n\r\n    }, [])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n   \r\n    const getSymptomsInfo= async ()=>{\r\n        const data = await fetch(`https://medi-aid-server.herokuapp.com/symptoms`)\r\n        const res =await data.json()\r\n        console.log(res);\r\n        setSymptoms(res)\r\n    \r\n    }\r\n\r\n    const showDetails = (name)=>{\r\n        const symptom = symptoms.find(symptom=>symptom.name===name)\r\n        return symptom\r\n    }\r\n    const showDiagnosisDetails = (name)=>{\r\n      const diagnosis = diagnoses.find(diagnosis=>diagnosis.name===name)\r\n      return diagnosis\r\n  }\r\n\r\n  const addValue=async (value)=>{\r\n     \r\n\r\n  setValues([...values, value])\r\n\r\n  \r\n    \r\n \r\n  }\r\n  const removeValue=(itemIndex)=>{\r\n   \r\n   let tempValues = values.filter((value)=>value !== itemIndex)\r\n   setValues(tempValues)\r\n  }\r\n\r\n    const handleSomething= (value)=>{          \r\n        if (values.includes(value)) {\r\n          removeValue(value)\r\n        }else{\r\n            addValue(value)\r\n        }\r\n     \r\n      };\r\n\r\n  \r\n    \r\n     \r\n\r\n      const retrieveDiagnoses=async ()=>{\r\n        let string = ''\r\n    \r\n        values.map((arr,index)=>{return string+=`${index ? '&':''}array=${arr}`})\r\n      \r\n       const data = await fetch(`https://medi-aid-server.herokuapp.com/tags?${string}`)\r\n    const res =await data.json()\r\nconsole.log(string);\r\nconsole.log(res);\r\n    setDiagnoses(res)\r\n    \r\n      }\r\n\r\n\r\n    return (\r\n        <MediContext.Provider value={{\r\n            symptoms,\r\n            setSymptoms,\r\n\r\n            showDetails,\r\n            handleSomething,\r\n\r\n            addValue,\r\n            removeValue,\r\n\r\n            values,\r\n            setValues,\r\n            \r\n            diagnoses,\r\n            setDiagnoses,\r\n\r\n            retrieveDiagnoses,\r\n\r\n            showDiagnosisDetails,\r\n\r\n\r\n        \r\n\r\n           \r\n        }}>\r\n            {children}\r\n        </MediContext.Provider>\r\n    )\r\n}\r\n\r\nconst MediConsumer = MediContext.Consumer\r\n\r\nexport {MediContext, MediProvider, MediConsumer}\r\n\r\n\r\n\r\n/*\r\nimport React from \"react\";\r\nimport { render } from \"react-dom\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    shouldCreate: \"\",\r\n    values:[],\r\n    checked:false\r\n  };\r\n\r\n  handleSomething = (value, itemIndex) => {\r\n    let shouldCreate = this.state.shouldCreate;\r\n\r\n    if (shouldCreate === \"Yes\") {\r\n      shouldCreate = \"No\";\r\n      this.removeValue(itemIndex)\r\n    } else if (shouldCreate === \"No\") {\r\n      shouldCreate = \"Yes\";\r\n     this.addValue(value)\r\n    } else {\r\n      shouldCreate = \"Yes\";\r\n      this.addValue(value)\r\n    }\r\n\r\n    this.setState({\r\n      shouldCreate\r\n    });\r\n  };\r\n\r\n  addValue=(value)=>{\r\n    const values = [...this.state.values]\r\n    this.setState({\r\n      values:[...values, value]\r\n    })\r\n  }\r\n  removeValue=(itemIndex)=>{\r\n    let values = [...this.state.values]\r\n    values = values.filter((value, index)=>value !== itemIndex)\r\n    this.setState({\r\n      values\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <input type=\"checkbox\" checked={this.state.shouldCreate === \"Yes\"} onClick={()=>this.handleSomething('covid', 'covid')} />\r\n\r\n        <div>\r\n          Should create? : {this.state.shouldCreate}\r\n        </div>\r\n        <p>{this.state.values}</p>\r\n\r\n\r\n        <form onSubmit={this.formSubmit}>\r\n        <div className=\"radio\">\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              value=\"covid\"\r\n              checked={this.state.values.includes('covid')}\r\n              onChange={(e)=>{this.addValue(e.target.value); this.setState({checked:false})}}\r\n            />\r\n            Covid\r\n          </label>\r\n        </div>\r\n        <div className=\"radio\">\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              value=\"covid\"\r\n              checked={this.state.checked}\r\n              onChange={(e)=>{this.removeValue(e.target.value); this.setState({checked:true})}}\r\n            />\r\n            No\r\n          </label>\r\n        </div>\r\n       \r\n      \r\n        \r\n      </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nrender(<App />, document.getElementById(\"root\"));\r\n\r\n */","import React, { useState, useEffect } from 'react';\r\nimport { FaAngleRight } from 'react-icons/fa';\r\n\r\nfunction Sidebar({page}) {\r\n    const [progressWidth, setProgressWidth] = useState({width:0})\r\nuseEffect(()=>{\r\n    \r\n       \r\n    if (page==='symptoms') {\r\n        setProgressWidth({width:'2rem'})\r\n    return (<p>Initial symptom selection</p>)\r\n    } else if (page==='questions'){\r\n        setProgressWidth({width:'4rem'})\r\n        return <p>Diagnostic questions</p>\r\n    }else if(page='results'){\r\n        setProgressWidth({width:'6rem'})\r\n        return <p>Diagnosis results</p>\r\n    }\r\n    \r\n}, [])\r\nconst displayAltSidebar=()=>{\r\n    if (page==='symptoms'){\r\n    return <p>Initial symptom selection</p>\r\n    } else if (page==='questions'){\r\n        return <p>Diagnostic questions</p>\r\n    }else if(page='results'){\r\n        return <p>Diagnosis results</p>\r\n    }\r\n}\r\n  \r\n   \r\n    return (\r\n       <>\r\n     <div className='sidebar'>\r\n            <p style={{color: page==='symptoms' ? '#fff':'#000'}}>Initial symptom selection</p>\r\n            <i ><FaAngleRight/></i>\r\n            <p style={{color: page==='questions' ? '#fff':'#000'}}>Diagnostic questions</p>\r\n            <i><FaAngleRight/></i>\r\n            <p style={{color: page==='results' ? '#fff':'#000'}}>Diagnosis results</p>\r\n\r\n        \r\n        </div>\r\n        <div className='altSidebar'>\r\n          {\r\n              displayAltSidebar()\r\n          }\r\n            <div className='progress-bar'>\r\n                <span style={progressWidth}></span>\r\n            </div>\r\n        </div>\r\n       </>\r\n    );\r\n}\r\n\r\nexport default Sidebar;","import React, {useContext, useEffect, useState} from 'react'\r\nimport { MediContext } from '../Context'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport Navbar from './Navbar';\r\nimport {FaArrowLeft, FaAngleLeft} from 'react-icons/fa'\r\nimport Sidebar from './Sidebar';\r\nexport default function FullDiagnosisDetails(){\r\n   \r\n    let { slug } = useParams();\r\n    const {showDetails, values, handleSomething, retrieveDiagnoses, setDiagnoses, setValues} = useContext(MediContext)\r\n    const [page] = useState('questions')\r\n    \r\n    useEffect(()=>{\r\n        return ()=>{   \r\n            setDiagnoses([])\r\n        }\r\n    }, [])    \r\n\r\n    const symptom = showDetails(slug)\r\n       \r\n    if(!symptom){\r\n        return <div>Requesting resources</div>\r\n    }\r\n    const {questions, name} = symptom\r\n  \r\n             \r\n    return <>\r\n     \r\n    <Navbar/>\r\n     <div className='body'>\r\n     <Sidebar page={page}/>\r\n        <div className=\"questions-box\">\r\n<h1 className='headline'> {name}</h1>\r\n<p className='sub-headline'>Find possible causes of {name} based on specific factors. Check at least one or more factors on this page that apply to your symptom(s).</p>\r\n  \r\n       <div>\r\n           {questions.map((item, index)=>{\r\n           const {question, tag} = item\r\n              \r\n           return <div key={index} className='question'>\r\n               <p className='question-txt'>{question}</p>    \r\n               <label className='checkbox'>\r\n                   \r\n               <input type=\"checkbox\" onChange={()=>{handleSomething(tag)}}  checked={values.includes(tag)} />\r\n               <span></span>\r\n               </label>\r\n          \r\n           </div>\r\n           \r\n           }\r\n           )}\r\n       </div>\r\n       <div className='btn-holder'>\r\n       <Link to='/d'><button className='back-btn'><i><FaAngleLeft/></i>Back</button></Link>\r\n       <Link to='/d'><button className='submit-btn' onClick={retrieveDiagnoses}>Submit</button></Link>\r\n       \r\n\r\n       </div>\r\n \r\n\r\n        <div>{values}</div>\r\n\r\n\r\n        </div>\r\n    </div>\r\n    </>\r\n\r\n}\r\n\r\n// export default class SymptomDetails extends Component{\r\n//   constructor(props){\r\n//       super(props)\r\n//       this.state={\r\n//           name:this.props.match.params.name,\r\n          \r\n//       }\r\n//   }\r\n//     render(){\r\n//         return(\r\n//             <MediConsumer>\r\n//                 {value=>{\r\n//                     const {showDetails, addValue, removeValue, values, setValues, handleSomething, retrieveDiagnoses} = value\r\n//                     const symptom = showDetails(this.state.name)\r\n               \r\n                    \r\n\r\n                   \r\n\r\n\r\n//                     if(!symptom){\r\n//                         return <div>The resource you requested for couldn't be retreived</div>\r\n//                     }\r\n//                     const {name, questions} = symptom\r\n//                     let string = ''     \r\n\r\n//                     return <div>\r\n//                         <div>\r\n                       \r\n//                        <div> {string}</div>\r\n//                        {name}\r\n\r\n//                        <div>\r\n//                            {questions.map((item, index)=>{\r\n//                            const {question, tag} = item\r\n                       \r\n                       \r\n//                            return <div key={index}>\r\n//                           {tag}\r\n                         \r\n//                              <label>\r\n//                            <input type=\"checkbox\" checked={values.includes(tag)} onChange={()=>handleSomething(tag)} />\r\n//                            {question}\r\n//                              </label>\r\n//                            </div>\r\n//                            }\r\n//                            )}\r\n//                        </div>\r\n//                    </div>\r\n//                    <Link to='/d'><button onClick={retrieveDiagnoses}>GO NOW</button></Link>\r\n//                     </div>\r\n//                 }}\r\n//             </MediConsumer>\r\n//         )\r\n//     }\r\n// }","import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport { FaArrowRight, FaAngleRight } from 'react-icons/fa';\r\nfunction Diagnosis({diagnosis}) {\r\n    const {name} = diagnosis\r\n    return (\r\n        <Link to={`/diagnosis/${name}`}>\r\n          <button className='diagnosis'>\r\n   \r\n   {name}\r\n   <i aria-hidden='t'><FaAngleRight/></i>\r\n\r\n</button>\r\n        </Link>\r\n    );\r\n}\r\n\r\nexport default Diagnosis;","import React, { useState, useEffect, useContext } from 'react';\r\nimport { MediContext } from '../Context';\r\nimport Diagnosis from '../components/Diagnosis';\r\nimport Navbar from '../components/Navbar';\r\nimport Sidebar from '../components/Sidebar';\r\n\r\nfunction DiagnosesList(props) {\r\n    const {diagnoses, setValues, setDiagnoses} = useContext(MediContext)\r\n    const [page] = useState('results')\r\n    const [displayPage, setDisplayPage] = useState(false)\r\n    useEffect(()=>{\r\n        setDisplayPage(true)\r\n        return ()=>{\r\n            setValues([])\r\n        }\r\n    }, [])\r\n  \r\n    return (<>\r\n    <Navbar/>\r\n    <div className='body' style={{display:diagnoses===[]?'none':'flex'}}>\r\n    <Sidebar page={page}/>\r\n    <div className='diagnoses-list-box'>\r\n        <h1 className='headline'>Diagnosis Results</h1>\r\n        <p className='sub-headline'>Please note that the list below may not be complete and is provided solely for informtational purposes and is not a qualified medical opinion</p>\r\n         {diagnoses.map(diagnosis=><Diagnosis key={diagnosis._id} diagnosis={diagnosis}/>)}\r\n            \r\n        </div>\r\n    </div>\r\n        \r\n        </>\r\n    );\r\n}\r\n\r\nexport default DiagnosesList;","import React, {useContext, useState } from 'react';\r\nimport {MediContext } from '../Context';\r\nimport {useParams} from 'react-router-dom'\r\nimport Navbar from '../components/Navbar';\r\nimport {FaMicrophone, FaFirstAid, FaHospital} from 'react-icons/fa'\r\nexport default function FullDiagnosisDetails(){\r\n    let { slug } = useParams();\r\n    const {showDiagnosisDetails} = useContext(MediContext)\r\n    const diagnosis = showDiagnosisDetails(slug)\r\n    const [isOpen, setIsOpen] = useState(false)\r\n\r\nlet interval;\r\n      const printARR =(myArray)=>{\r\n    //     let string = ''\r\n    //   let func =setInterval(function(){\r\n    //     for (const i in array) {\r\n    //         string += array[i]\r\n    //     }\r\n    //   }, 6000)\r\n    //     var utterance  = new SpeechSynthesisUtterance();\r\n    //     utterance.text = string\r\n    //     speechSynthesis.speak(utterance);\r\n\r\n    //     let myArray = [0, 1, 2, 3, 4]\r\n\r\ninterval = setInterval(gen => {\r\n  const { value, done } = gen.next()\r\n  \r\n  if (done) {\r\n    clearInterval(interval)\r\n  } else {\r\n    console.log(value)\r\n    var utterance  = new SpeechSynthesisUtterance();\r\n    utterance.text = value\r\n    speechSynthesis.speak(utterance);\r\n  }\r\n}, 5000, myArray[Symbol.iterator]())\r\n      }\r\n\r\n      const cancelSpeech =()=>{\r\n          clearInterval(interval)\r\n        var synth = window.speechSynthesis;\r\n\r\n        \r\n        synth.cancel()\r\n      }\r\n  \r\n\r\n    if(!diagnosis){\r\n        return <div>The resource you requested for couldn't be retreived</div>\r\n       }\r\n       const {name, overview, causes, symptoms, prevention, firstAid, firstAid:[aid], triage} = diagnosis\r\n       const {headline, list} = aid\r\n       return <>\r\n       <Navbar/>\r\n\r\n       <div className='body'>\r\n         \r\n           <div className=\"overlay\" style={{height:isOpen?'100%': '0'}}>\r\n  <button to='' className=\"closebtn\" onClick={()=>setIsOpen(!isOpen)}>&times;</button>\r\n  <div className=\"overlay-content\">\r\n\r\n  <div className='triage-div'>\r\n <div className='img-holder'>\r\n<FaHospital/>\r\n </div>\r\n <div className='content'>\r\n <h2>Triage Advice</h2>\r\n        {triage.map(item=>(\r\n            <div>\r\n            <h3>{item.message}</h3>\r\n       <ul>\r\n           {item.list.map(listItem=>(\r\n               <li>{listItem}</li>\r\n           ))}\r\n       </ul>\r\n       </div>\r\n        ))}\r\n </div>\r\n    </div>\r\n  <div className='firstAid-div'>\r\n   <div className='img-holder'>\r\n<FaFirstAid/>\r\n   </div>\r\n   <div className='content'>\r\n   <div className='headline'>\r\n  <h2>First-Aid/Treatment options</h2>\r\n  <div id=\"btn-holder\">\r\n  <button onClick={()=>printARR(list)}><i><FaMicrophone/></i> Read Aloud </button>\r\n    <button onClick={cancelSpeech} id=\"cancel\">Cancel Read Aloud</button>\r\n  </div>\r\n      </div>\r\n        {firstAid.map(item=>(\r\n            <div>\r\n            <h3>{item.headline}</h3>\r\n       <ul>\r\n\r\n           {item.list.map(listItem=>(\r\n              <li>{listItem}</li>\r\n           ))}\r\n       </ul>\r\n       </div>\r\n        ))}\r\n   </div>\r\n    </div>\r\n\r\n    \r\n\r\n  </div>\r\n</div>\r\n       <div className='diagnosisDetailsPage'>\r\n    \r\n          <div className='header'>\r\n              \r\n              <h1 className='diagnosis-name'><b>{name}</b></h1>\r\n              \r\n        \r\n            <div className='nav-buttons'>\r\n                <button>Symptoms</button>\r\n                <button>Causes</button>\r\n                <button>Prevention</button>\r\n                \r\n\r\n            </div>\r\n          </div>\r\n\r\n          <div className='overview'>\r\n              <h1>Overview</h1>\r\n          <p>{overview}</p>\r\n          </div>\r\n      \r\n\r\n    <div className='causes'><h1>Causes</h1>\r\n        {causes.map(item=>(\r\n            <div>\r\n            <h3>{item.headline}</h3>\r\n       \r\n           <ul>\r\n           {item.list.map(listItem=>(\r\n               <li>{listItem}</li>\r\n           ))}\r\n           </ul>\r\n          \r\n       \r\n       </div>\r\n        ))}\r\n    </div>\r\n\r\n    <div className='symptoms'><h1>Symptoms</h1>\r\n        {symptoms.map(item=>(\r\n            <div>\r\n            <h2>{item.headline}</h2>\r\n       <ul>\r\n           {item.list.map(listItem=>(\r\n               <li>{listItem}</li>\r\n           ))}\r\n       </ul>\r\n       </div>\r\n        ))}\r\n    </div>\r\n\r\n\r\n    <div className='prevention'><h1>Preventive measures</h1>\r\n        {prevention.map(item=>(\r\n            <div>\r\n            <h2>{item.headline}</h2>\r\n       <ul>\r\n           {item.list.map(listItem=>(\r\n               <li>{listItem}</li>\r\n           ))}\r\n       </ul>\r\n       </div>\r\n        ))}\r\n    </div>\r\n\r\n\r\n\r\n    \r\n       </div>\r\n\r\n       <button style={{visibility: isOpen?'hidden':'visible'}} className=\"triage-btn\" onClick={()=>setIsOpen(!isOpen)}><i><FaFirstAid/></i>First-Aid</button>\r\n       </div>\r\n       </>\r\n       \r\n\r\n}\r\n// class FullDiagnosisDetails extends Component {\r\n//     constructor(props){\r\n//         super(props)\r\n//         this.state={\r\n//             name:this.props.match.params.name\r\n//         }\r\n//     }\r\n//     render() {\r\n//         return (\r\n//            <MediConsumer>\r\n//                {value=>{\r\n//                    const {showDiagnosisDetails} = value\r\n//                    const diagnosis = showDiagnosisDetails(this.state.name)\r\n\r\n//                    if(!diagnosis){\r\n//                     return <div>The resource you requested for couldn't be retreived</div>\r\n//                    }\r\n//                    const {name} = diagnosis\r\n//                    return <div>\r\n//                        <p><b>{name}</b></p>\r\n//                    </div>\r\n//                }}\r\n//            </MediConsumer>\r\n//         );\r\n//     }\r\n// }\r\n\r\n\r\n// export default FullDiagnosisDetails;\r\n// import {\r\n//     BrowserRouter as Router,\r\n//     Switch,\r\n//     Route,\r\n//     useParams\r\n//   } from \"react-router-dom\";\r\n  \r\n//   function BlogPost() {\r\n//     let { slug } = useParams();\r\n//     return <div>Now showing post {slug}</div>;\r\n//   }\r\n  ","import React, { useEffect } from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport {FaArrowRight, FaAngleRight} from 'react-icons/fa'\r\nfunction Symptom({symptom, setValues, values}) {\r\n    const {name, tag} = symptom\r\n\r\n    return (\r\n    <Link to={`/${name}`}>\r\n   <button className='symptom' onClick={()=>{setValues([...values, tag])}}>\r\n   \r\n              {name}\r\n              <i aria-hidden='t'><FaAngleRight/></i>\r\n        \r\n   </button>\r\n    </Link>\r\n        \r\n    );\r\n}\r\n\r\nexport default Symptom;","import React, { useState, useContext, useEffect } from 'react';\r\nimport { MediContext } from '../Context';\r\nimport Symptom from './Symptom';\r\nimport Navbar from './Navbar';\r\nimport Sidebar from './Sidebar';\r\n\r\n\r\nfunction SymptomsList(props) {\r\n    const {symptoms, setSymptoms, values, setValues} = useContext(MediContext)\r\n    const [searchString, setSearchString] = useState('')\r\n    const [page] = useState('symptoms')\r\n\r\n    let _symptoms = symptoms;\r\n    let search = searchString.trim().toLowerCase()\r\n    if (search.length > 0){\r\n        _symptoms = _symptoms.filter(symptom=>{\r\n            return symptom.name.toLowerCase().match(search)\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        setValues([])\r\n      }, [])\r\n     const handleChange=(e)=>{\r\n        setSearchString(e.target.value)\r\n      }\r\n    return (\r\n        <>\r\n        <Navbar/>\r\n            \r\n        <div className='body'>\r\n        \r\n         <Sidebar page={page}/>\r\n        \r\n          <div className='symptoms-box'>\r\n          <div className='search-box'>\r\n                <h3>What is the main symptom you are experiencing?</h3>\r\n                <input placeholder='Search list of symptoms'\r\n                value={searchString}\r\n                onChange={handleChange}/>\r\n            </div>\r\n        <div className='symptoms-list'>\r\n          {_symptoms.map(symptom=>(\r\n              <Symptom key={symptom._id} symptom={symptom} values={values} setValues={setValues}/>\r\n            ))}\r\n          </div>\r\n          </div>\r\n        \r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SymptomsList;","import React from 'react'\nimport './App.scss';\nimport {Switch, Route} from 'react-router-dom'\nimport Home from './pages/Home';\nimport SymptomDetails from './components/SymptomDetails';\nimport DiagnosesList from './pages/DiagnosesList';\nimport FullDiagnosisDetails from './pages/FullDiagnosisDetails';\nimport SymptomsList from './components/SymptomsList';\n\n\nfunction App() {\n    return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path='/' component={Home}/>\n        <Route exact path='/symptoms' component={SymptomsList}/>\n        <Route exact path='/d' component={DiagnosesList}/>\n        <Route exact path='/:slug' component={SymptomDetails}/>\n        <Route exact path='/diagnosis/:slug' component={FullDiagnosisDetails}/>\n       \n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { MediProvider } from './Context';\nimport {BrowserRouter as Router} from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <MediProvider>\n      <Router>\n        <App/>\n      </Router>\n    </MediProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}